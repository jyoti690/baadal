(dp1
S'output'
p2
S"<type 'exceptions.ImportError'> Cannot import module 'applications.baadal.modules.pbr'"
p3
sS'layer'
p4
S'/home/archer/Documents/web2py/applications/baadal/models/Baadal.py'
p5
sS'code'
p6
S'#!/usr/bin/python\nimport test\nimport logging\nfrom keystoneclient.auth.identity import v2\nfrom keystoneclient import session\nimport os\nimport datetime\n\nclass Machine:\n    def __init__(self, ):\n        self.hostname = ""\n        self.config = {\n                memory : None,\n                storage : None,\n                extra_storage : None,\n                cpu : None,\n                private_ip : None,\n                public_ip : None\n        }\n        \nclass BaadalVM:\n    def  __init__(self, id=None, server=None, conn=None):\n        if id != None and server != None:\n            raise BaadalException(\'Cannot initialise server, please specify either server or id\')\n        else:\n            import novaclient.v2.servers\n            if isinstance(server, novaclient.v2.servers.Server):\n                self.server = server\n                self.__conn = conn\n\n        #create an object corresponding to an existing VM with specified ID\n        #usedb\n        self.name = self.server.name\n        self.id = None\n        self.identity = None\n        self.hostid = None\n        self.vnc_port = None\n        self.purpose = None\n        self.datastore = None\n        self.template_id = None\n        self.expiry_date = None\n        self.start_time = None\n        self.security_domain = None\n        self.snapshots = []\n        #self.server = novaclient.v2.servers.Server\n        pass\n\n    def start(self, ):\n        """\n        starts the Vritual Machine,\n        params: None\n        return: None\n        """\n\n        try:\n            self.server.start()\n        except Exception as e:\n            #debug.log(e)\n            raise BaadalException(e)\n        pass\n\n    def shutdown(self, force=False):\n        """\n        shutdown the Virtual Machine\n        params:\n            force: bool, True for forced shutdown, False for graceful shutdown, default False\n        return: None\n        """\n\n        try:\n            self.server.stop()\n        except Exception as e:\n            #debug.log(e)\n            raise BaadalException(e)\n        pass\n        \n    def reboot(self, soft=True):\n        """\n        reboot the Virtual Machine\n        params:\n            soft: bool, True for soft reboot, False for hard reboot, default True\n        return: None\n        """\n        try:\n            if soft == True:\n                res = self.server.reboot(reboot_type=\'REBOOT_SOFT\')\n            else:\n                res = self.server.reboot(reboot_type=\'REBOOT_HARD\')\n        except Exception as e:\n            #debug.log(e)\n            raise BaadalException(e)\n\n    def delete(self, ):\n        try:\n            res = self.server.delete()\n        except Exception as e:\n            #debug.log(e)\n            raise BaadalException(e)\n        pass\n\n    def createSnapshot(self,snapshot_name=None):\n        try:\n            snapshot_name = snapshot_name or self.server.name + "snapshot" + datetime.datetime.now().isoformat()\n            snapshot_id = self.server.create_image(snapshot_name)\n            snapshot_image = self.__conn[\'nova\'].findImage()\n            return snapshot_id\n            #return Snapshot(snapshot, self.server)\n        except Exception as e:\n            #debug.log(e)\n            raise BaadalException(e)\n        pass\n\n    def refreshStatus(self):\n        #refresh connection to a modified VM\n        self.server = self.server.manager.find(id=self.server.id)\n\n    def migrate(self, target_host, live=False):\n        try:\n            if live == True:\n                res = self.server.migrate(dest)\n            else:\n                res = self.live_migrate(dest)\n        except Exception as e:\n            #debug.log(e)\n            raise BaadalException(e)\n        pass\n\n    def revertSpanshot(self, snapshot_id):\n        #usedb\n        pass\n\n    def getXml(self, ):\n        return self.server.to_dict()\n        pass\n\n    def __getattr__(self, attr):\n        if attr == None:\n            return self\n        if attr is None:\n            return self\n        if attr == \'status\':\n            return self.getStatus()\n        if attr == \'attacheddisks\':\n            return self.attachedDisks()\n        if attr == \'lastsnapshot\':\n            return self.lastSnapshot()\n        else:\n            raise AttributeError\n\n    def getStatus(self, ):\n        STATUS = {\n                \'ACTIVE\' : \'Running\',\n                \'SHUTOFF\' : \'Shutdown\',\n                }\n        self.refreshStatus()\n        return STATUS[self.server.status]\n        pass\n\n    def clone(self, clone_name=None):\n        """\n        create clone of the selected Virtual Machine\n        params:\n            clone_name: name of the new clone VM to be created (optional),\n            an automatically generated name is used if clone_name is not\n            supplied\n        return:\n        """\n\n        #create a snapshot of the  machine\n        #create a new vm using the newly created snapshot\n        #delete the snapshot\n        try:\n            snapshot_id = self.server.create_image("temp")\n            clone_name = clone_name or self.server.name + \'_clone\'\n            flavor_id = self.server.flavor[\'id\']\n            image = self.__conn[\'nova\'].images.find(id=snapshot_id)\n            while image.status != \'ACTIVE\':\n                image = self.__conn[\'nova\'].images.find(id=snapshot_id)\n                pass\n            else:\n                clone = self.server.manager.create(clone_name, image,\n                    self.__conn[\'nova\'].flavors.find(id=flavor_id))\n                while clone.status != \'ACTIVE\':\n                    clone = clone.manager.find(id=clone.id)\n                else:\n                    image.delete()\n                    attached_disks = self.attachedDisks()\n                    for i in attached_disks:\n                        self.__conn[\'cinder\'].volumes.create_server_volume(clone.id, i[\'id\'], i[\'path\'])\n            return clone\n        except  Exception as e:\n        #debug.log(e)\n            raise BaadalException(e)\n        pass\n    \n    def attachedDisks(self,):\n        volume_ids = self.server.__getattr__(\'os-extended-volumes:volumes_attached\')\n        disk_list = []\n        for i in volume_ids:\n            volume = self.__conn[\'cinder\'].volumes.find(id=i[\'id\'])\n            attachments_list = volume.attachments\n            for entry in attachments_list:\n                if entry[\'server_id\'] == self.server.id:\n                    devicepath = entry[\'device\']\n                    disk_list.append({\n                        \'id\' : i[\'id\'],\n                        \'path\' : devicepath\n                        })\n                    pass\n            pass\n        return disk_list\n            \n    def lastSnapshot(self, ):\n        #get the last snapshot of the current VM or return None if no snapshots found\n        #usedb\n        pass\n\n    def attachDisk(self, disk, device_path):\n        """\n        attach a disk to a Virtual Machine\n        params:\n            disk: instance of disk to be attached\n            device_path: path in the system where the disk is to be attached\n        return: \n        """\n\n        try:\n            self.__conn[\'cinder\'].volumes.create_server_volume(self.server.id, disk.id, device_path)\n        except Exception as e:\n            #debug.log(e)\n            raise BaadalException(e)\n        pass\n\n    def update(self, **kwargs):\n        #update metadata/config\n        pass\n    \n    pass\n\nclass Image:\n    def __init__(self, image):\n        self.__image = image\n        self.type = None\n        pass\n    \n    def delete(self):\n        pass\n    \n    pass\n\nclass Disk:\n    def __init__(self, ):\n        pass\n        \n    def attachTo(self, vm, device_path):\n        try:\n            self.__conn[\'cinder\'].volumes.create_server_volume(vm.id, self.id, device_path)\n        except Exception as e:\n            #debug.log(e)\n            raise BaadalException("Failed to attach disk id " + self.id + "to" + vm.id + e)\n        pass\n    \n    def delete(self):\n        pass\n    \n    pass\n\nclass Snapshot:\n    def __init__(self, snapshot_name, vm ):\n        self.vm_id = vm.id\n        self.datastore_id = None\n        self.name = snapshot_name\n        self.type = None\n        self.path = None\n        self.timepath = None\n        pass\n\n    def delete(self, ):\n        pass\n\n    pass\n\nclass Template:\n    def __init__(self, ):\n        self.id = None\n        self.name = None\n        self.os = {\n            os : None,\n            name : None,\n            type : None,\n            edition : None\n        } \n        self.arch = None\n        self.hdd = None\n        self.type = None\n        self.tag = None\n        self.datastore = None\n        self.owner = None\n        self.is_active = None\n\nclass Host(Machine):\n    def __init__(self, ):\n        self.category = None\n        self.status = None\n        self.slot = None\n        self.rack = None\n        self.hosttype = None\n        pass\n    pass\n\nclass Connection:\n    def __init__(self, authurl, tenant_name, username, password):\n        from keystoneclient.auth.identity import v2\n        from keystoneclient import session\n        from novaclient import client\n        from cinderclient import client as cclient \n        auth = v2.Password(auth_url=authurl, username=username,\n                password=password, tenant_name=tenant_name)\n        sess = session.Session(auth=auth)\n        self.__conn = {}\n        self.__conn[\'nova\'] = client.Client(\'2\', session=sess)\n        self.__conn[\'cinder\'] = cclient.Client(\'2\', session=sess)\n        #self.__cinder = cclient.Client("2", session=sess)\n        #self.__conn = client.Client("2", session=sess)\n        pass\n\n    def close(self, ):\n        pass\n\n    def usage(self, attribute_list=None):\n        USAGE_PARAMS = {\n                \'free_storage\' : \'free_disk_gb\',\n                \'used_storage\' : \'local_gb_used\',\n                \'total_storage\' : \'local_gb\',\n                \'free_memory\' : \'free_ram_mb\',\n                \'used_memory\' : \'memory_mb_used\',\n                \'total_memory\' : \'memory_mb\',\n                \'total_vms\' : \'running_vms\',\n                \'load_avg\' : \'current_workload\',\n                \'vcpus\' : \'vcpus\',\n                \'vcpus_used\' : \'vcpus_used\'\n                }\n        values = {}\n        stats = self.__conn[\'nova\'].hypervisor_stats.statistics().to_dict()\n        attribute_list = attribute_list or USAGE_PARAMS.keys()\n        for item in attribute_list:\n            values[item] = stats[USAGE_PARAMS[item]]\n        return values\n        pass\n\n    def baadalVMs(self, ):\n        #return a list of VMs running on the host\n        try:\n            serverList = self.__conn[\'nova\'].servers.list()\n            serverList = [ BaadalVM(server=i, conn=self.__conn) for i in serverList ]\n            return serverList\n        except Exception as e:\n            raise BaadalException(e)\n        \n        #wrap each object of the list of novaclient.v2.servers.Server objects into\n        #a list of BaadalVM objects and return it\n        pass\n\n    def findBaadalVM(self, **kwargs):\n        try:\n            baadalVM = self.__conn[\'nova\'].servers.find(**kwargs)\n            return BaadalVM(server=baadalVM, conn=self.__conn)\n        except NotFound:\n            raise BaadalException("No matching VM found")\n        pass\n\n    def createBaadalVM(self, name, image, template, **kwargs):\n        server = self.__conn[\'nova\'].servers.create(name, image, template, **kwargs)\n        return BaadalVM(server=server, conn=self.__conn)\n        pass\n\n    def createTemplate(self, name, ram, disk, vcpus):\n        try:\n            flavor = self.__conn[\'nova\'].flavors.create(name, ram, disk)\n        except:\n            raise BaadalException("Could not create flavor")\n    \n    def images(self, ):\n        #return a list of all images\n        try:\n            imagesList = self.__conn[\'nova\'].images.list()\n            #imagesList = [ Image(i) for i in imagesList ]\n            return imagesList\n        except Exception as e:\n            raise BaadalException(e)\n        pass\n\n    def findImage(self, **kwargs):\n        try:\n            image = self.__conn[\'nova\'].images.find(**kwargs)\n            #return Image(image)\n            return image\n        except Exception as e:\n            raise BaadalException(e)\n        pass\n    \n    def templates(self):\n        try:\n            templates = self.__conn[\'nova\'].flavors.list()\n            return templates\n        except Exception as e:\n            raise BaadalException(e)\n        pass\n\n    def findTemplate(self, **kwargs):\n        try:\n            template = self.__conn[\'nova\'].flavors.find(**kwargs)\n            return template\n        except Exception as e:\n            raise BaadalException(e)\n        pass\n\n    pass\n\nclass BaadalException(Exception):\n    def __init__(self, msg):\n        self.msg = msg\n        pass\n    \n    def __str__(self):\n        return repr(self.msg)\n        pass\n    pass\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.ImportError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.ImportError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.ImportError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.ImportError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.ImportError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.ImportError object>'
p23
sS'args'
p24
S'("Cannot import module \'applications.baadal.modules.pbr\'",)'
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.ImportError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.ImportError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.ImportError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.ImportError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.ImportError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.ImportError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.ImportError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.ImportError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.ImportError object>'
p47
sS'__doc__'
p48
S'"Import can\'t find module, or can\'t find name in module."'
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.ImportError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"Cannot import module 'applications.baadal.modules.pbr'"
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S'sVZ\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>baadal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-dff754e5-0758-4bb2-9767-8c847069d00f<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_test</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-792bb60f-6261-436e-9717-343816e56235<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-2e8cddd1-8812-4c9c-9b8d-8e148404e6c5<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-2e8cddd1-8812-4c9c-9b8d-8e148404e6c5; session_id_test=127.0.0.1-792bb60f-6261-436e-9717-343816e56235; session_id_admin=127.0.0.1-dff754e5-0758-4bb2-9767-8c847069d00f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>localhost:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:40.0) Gecko/20100101 Firefox/40.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/baadal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>55463</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>archer-OptiPlex-9020</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/archer/Documents/web2py/applications/baadal/&#x27;, &#x27;/home/archer/Documents/web2py/applications/admin/&#x27;, &#x27;/home/archer/Documents/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/archer/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f23fb70a170: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;archer-OptiPlex-9020&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: True, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/archer/Documents/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;password&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/archer/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-2e8cddd1-8812-4c9c-9b8d-8e148404e6c5; session_id_test=127.0.0.1-792bb60f-6261-436e-9717-343816e56235; session_id_admin=127.0.0.1-dff754e5-0758-4bb2-9767-8c847069d00f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>localhost:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:40.0) Gecko/20100101 Firefox/40.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>archer-OptiPlex-9020</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/baadal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>55463</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/baadal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>archer-OptiPlex-9020</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/archer/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.12.3-stable+timestamp.2015.08.19.00.18.03</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f23ff69a1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f23fb79c668&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f23f814f0d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f23ff69a1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f23fb79c668&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f23f814f0d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/archer/Documents/web2py/applications/baadal/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/archer/Documents/web2py/applications/baadal/&#x27;, &#x27;/home/archer/Documents/web2py/applications/admin/&#x27;, &#x27;/home/archer/Documents/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/archer/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f23fb70a170: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;archer-OptiPlex-9020&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: True, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/archer/Documents/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;password&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/archer/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>archer-OptiPlex-9020</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.12.3-stable+timestamp.2015.08.19.00.18.03</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 9, 2, 20, 34, 47, 458066)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/baadal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 9, 2, 15, 4, 47, 458080)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f23fba8d710&gt;</div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'/home/archer/Documents/web2py/gluon/restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0x7f23e0a9e2b0, file "/...py/applications/baadal/models/Baadal.py", line 2>'
p69
ssS'lnum'
p70
I227
sS'lines'
p71
(dp72
I224
S'            ccode = code'
p73
sI225
S'        else:'
p74
sI226
S'            ccode = compile2(code, layer)'
p75
sI227
S'        exec ccode in environment'
p76
sI228
S'    except HTTP:'
p77
sI229
S'        raise'
p78
sI230
S'    except RestrictedError:'
p79
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p80
sI222
S'    try:'
p81
sI223
S'        if isinstance(code, types.CodeType):'
p82
ssS'call'
p83
S"(code='#!/usr/bin/python\\nimport test\\nimport logging\\nfro...     return repr(self.msg)\\n        pass\\n    pass\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}, layer='/home/archer/Documents/web2py/applications/baadal/models/Baadal.py')"
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'/home/archer/Documents/web2py/applications/baadal/models/Baadal.py'
p88
sg64
(dp89
S'v2'
p90
S'undefined'
p91
sS'keystoneclient'
p92
g91
ssg70
I4
sg71
(dp93
I2
S'import test'
p94
sI3
S'import logging'
p95
sI4
S'from keystoneclient.auth.identity import v2'
p96
sI5
S'from keystoneclient import session'
p97
sI6
S'import os'
p98
sI7
S'import datetime'
p99
sI8
S''
sI9
S'class Machine:'
p100
sI10
S'    def __init__(self, ):'
p101
sI11
S'        self.hostname = ""'
p102
ssg83
S'()'
p103
sg85
S'<module>'
p104
sa(dp105
g62
S'/home/archer/Documents/web2py/gluon/custom_import.py'
p106
sg64
(dp107
S'fromlist'
p108
S"('v2',)"
p109
sS'level'
p110
S'-1'
p111
sS'base_importer'
p112
S'<built-in function __import__>'
p113
sS'globals'
p114
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p115
sS'pname'
p116
S"'applications.baadal.modules.keystoneclient.auth.identity'"
p117
sS'locals'
p118
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p119
ssg70
I95
sg71
(dp120
I96
S'        except ImportError, e1:'
p121
sI97
S'            import_tb = sys.exc_info()[2]'
p122
sI98
S'            try:'
p123
sI99
S'                return NATIVE_IMPORTER(name, globals, locals, fromlist, level)'
p124
sI90
S'                        modules_prefix += "." + itemname'
p125
sI91
S'                    return result'
p126
sI92
S'                else:'
p127
sI93
S'                    # import like "from x import a, b, ..."'
p128
sI94
S'                    pname = modules_prefix + "." + name'
p129
sI95
S'                    return base_importer(pname, globals, locals, fromlist, level)'
p130
ssg83
S"(name='keystoneclient.auth.identity', globals={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}, locals={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}, fromlist=('v2',), level=-1)"
p131
sg85
S'custom_importer'
p132
sa(dp133
g62
S'/home/archer/Documents/web2py/applications/baadal/modules/keystoneclient/__init__.py'
p134
sg64
(dp135
S'pbr'
p136
g91
ssg70
I32
sg71
(dp137
I32
S'import pbr.version'
p138
sI33
S''
sI34
S''
sI35
S"__version__ = pbr.version.VersionInfo('python-keystoneclient').version_string()"
p139
sI36
S''
sI27
S''
sI28
S'"""'
p140
sI29
S''
sI30
S'import sys'
p141
sI31
S''
ssg83
S'()'
p142
sg85
g104
sa(dp143
g62
S'/home/archer/Documents/web2py/gluon/custom_import.py'
p144
sg64
(dp145
S'builtinstr'
p146
S"<type 'str'>"
p147
sS'builtinImportError'
p148
S"<type 'exceptions.ImportError'>"
p149
sS'e'
S"KeyError('applications.baadal.modules.pbr',)"
p150
ssg70
I89
sg71
(dp151
I84
S'                        new_mod = base_importer('
p152
sI85
S'                            modules_prefix, globals, locals, [itemname], level)'
p153
sI86
S'                        try:'
p154
sI87
S"                            result = result or sys.modules[modules_prefix+'.'+itemname]"
p155
sI88
S'                        except KeyError, e:'
p156
sI89
S"                            raise ImportError, 'Cannot import module %s' % str(e)"
p157
sI90
S'                        modules_prefix += "." + itemname'
p158
sI91
S'                    return result'
p159
sI92
S'                else:'
p160
sI93
S'                    # import like "from x import a, b, ..."'
p161
ssg83
S"(name='pbr.version', globals={'__builtins__': {'ArithmeticError': <type 'exceptions.ArithmeticError'>, 'AssertionError': <type 'exceptions.AssertionError'>, 'AttributeError': <type 'exceptions.AttributeError'>, 'BaseException': <type 'exceptions.BaseException'>, 'BufferError': <type 'exceptions.BufferError'>, 'BytesWarning': <type 'exceptions.BytesWarning'>, 'DeprecationWarning': <type 'exceptions.DeprecationWarning'>, 'EOFError': <type 'exceptions.EOFError'>, 'Ellipsis': Ellipsis, 'EnvironmentError': <type 'exceptions.EnvironmentError'>, ...}, '__doc__': None, '__file__': None, '__name__': None, '__package__': None, '__path__': None, 'sys': None}, locals={'__builtins__': {'ArithmeticError': <type 'exceptions.ArithmeticError'>, 'AssertionError': <type 'exceptions.AssertionError'>, 'AttributeError': <type 'exceptions.AttributeError'>, 'BaseException': <type 'exceptions.BaseException'>, 'BufferError': <type 'exceptions.BufferError'>, 'BytesWarning': <type 'exceptions.BytesWarning'>, 'DeprecationWarning': <type 'exceptions.DeprecationWarning'>, 'EOFError': <type 'exceptions.EOFError'>, 'Ellipsis': Ellipsis, 'EnvironmentError': <type 'exceptions.EnvironmentError'>, ...}, '__doc__': None, '__file__': None, '__name__': None, '__package__': None, '__path__': None, 'sys': None}, fromlist=[], level=-1)"
p162
sg85
g132
sasS'pyver'
p163
S'Python 2.7.6: /usr/bin/python (prefix: /usr)'
p164
sS'session'
p165
g57
(S's\x1a\x00\x00\x00<div><table></table></div>'
tRp166
sS'etype'
p167
S"<type 'exceptions.ImportError'>"
p168
sS'date'
p169
S'Wed Sep  2 20:34:47 2015'
p170
sS'response'
p171
g57
(S's\xbd\x16\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f23f80867d8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_baadal</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-03586bd9-441b-4b87-9495-d773a37d6e1f<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div>: </div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>table3cols</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/index/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_baadal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/archer/Documents/web2py/applications/baadal/sessions/127.0.0.1-03586bd9-441b-4b87-9495-d773a37d6e1f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>c0762cbf4baf7f9af97c051e7fcb8083</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-03586bd9-441b-4b87-9495-d773a37d6e1f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_baadal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>baadal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/index.html</div></td></tr></table></div>'
tRp172
sS'locals'
p173
(dp174
S'fromlist'
p175
S'[]'
p176
sS'e'
S"KeyError('applications.baadal.modules.pbr',)"
p177
sS'name'
p178
S"'pbr.version'"
p179
sS'level'
p180
S'-1'
p181
sS'itemname'
p182
S"'pbr'"
p183
sS'e3'
p184
S"ImportError('No module named pbr.version',)"
p185
sS'base_importer'
p186
S'<built-in function __import__>'
p187
sS'globals'
p188
S"{'__builtins__': {'ArithmeticError': <type 'exceptions.ArithmeticError'>, 'AssertionError': <type 'exceptions.AssertionError'>, 'AttributeError': <type 'exceptions.AttributeError'>, 'BaseException': <type 'exceptions.BaseException'>, 'BufferError': <type 'exceptions.BufferError'>, 'BytesWarning': <type 'exceptions.BytesWarning'>, 'DeprecationWarning': <type 'exceptions.DeprecationWarning'>, 'EOFError': <type 'exceptions.EOFError'>, 'Ellipsis': Ellipsis, 'EnvironmentError': <type 'exceptions.EnvironmentError'>, ...}, '__doc__': None, '__file__': None, '__name__': None, '__package__': None, '__path__': None, 'sys': None}"
p189
sS'result'
p190
S'None'
p191
sS'items'
p192
S"['', 'home', 'archer', 'Documents', 'web2py', 'applications', 'baadal']"
p193
sS'modules_prefix'
p194
S"'applications.baadal.modules'"
p195
sS'new_mod'
p196
S"<module 'applications.baadal.modules' from 'applications/baadal/modules/__init__.py'>"
p197
sS'e1'
p198
S'ImportError("Cannot import module \'applications.baadal.modules.pbr\'",)'
p199
sS'import_tb'
p200
S'None'
p201
sg173
S"{'__builtins__': {'ArithmeticError': <type 'exceptions.ArithmeticError'>, 'AssertionError': <type 'exceptions.AssertionError'>, 'AttributeError': <type 'exceptions.AttributeError'>, 'BaseException': <type 'exceptions.BaseException'>, 'BufferError': <type 'exceptions.BufferError'>, 'BytesWarning': <type 'exceptions.BytesWarning'>, 'DeprecationWarning': <type 'exceptions.DeprecationWarning'>, 'EOFError': <type 'exceptions.EOFError'>, 'Ellipsis': Ellipsis, 'EnvironmentError': <type 'exceptions.EnvironmentError'>, ...}, '__doc__': None, '__file__': None, '__name__': None, '__package__': None, '__path__': None, 'sys': None}"
p202
sS'oname'
p203
S"'pbr.version'"
p204
sssS'traceback'
p205
S'Traceback (most recent call last):\n  File "/home/archer/Documents/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/archer/Documents/web2py/applications/baadal/models/Baadal.py", line 4, in <module>\n    from keystoneclient.auth.identity import v2\n  File "/home/archer/Documents/web2py/gluon/custom_import.py", line 95, in custom_importer\n    return base_importer(pname, globals, locals, fromlist, level)\n  File "applications/baadal/modules/keystoneclient/__init__.py", line 32, in <module>\n    import pbr.version\n  File "/home/archer/Documents/web2py/gluon/custom_import.py", line 89, in custom_importer\n    raise ImportError, \'Cannot import module %s\' % str(e)\nImportError: Cannot import module \'applications.baadal.modules.pbr\'\n'
p206
s.